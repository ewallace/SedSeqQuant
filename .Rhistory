geom_text(data=df_comp_stats,aes(x=10,y=100,label=paste0("r_pears=",round(SP.withnoise.mean,digits=3))))+
labs(x="Estimated pSup",y="Actual pSup")
p_random
df_comp_stats_filter <- df_comp_generated_pSup %>%
filter(Total.mean>1000) %>%
filter(!is.infinite(SP.withnoise.mean)) %>%
group_by(Method) %>% nest %>%
mutate(fit = map(data,function(df){
df %>% select(transcript_ID,SP.est,SP.withnoise.mean) %>%
column_to_rownames(var="transcript_ID") %>%
corrr::correlate(method="pearson") %>%
filter(term=="SP.est")
})) %>%
select(-data) %>%
unnest(fit)
p_random_filt <- ggplot(df_comp_generated_pSup %>%filter(Total.mean>1000),
aes(SP.est,SP.withnoise.mean))+
geom_abline(slope=1,linetype="dotted")+
geom_point()+
scale_x_log10()+scale_y_log10()+
facet_grid(.~Method)+
geom_text(data=df_comp_stats_filter,aes(x=10,y=100,label=paste0("r_pears=",round(SP.withnoise.mean,digits=3))))+
labs(x="Estimated pSup",y="Actual pSup",subtitle="Filtered for Total.counts>1000")
p_random_filt
View(df_generated_pSup)
View(generated_counts)
View(generated_counts)
View(generated_counts)
df_generated_pSup <- generated_counts %>%
group_by(transcript_ID) %>%
mutate(Total.mean = exp(mean(log(Total)))) %>%
mutate(SP.generated=pSup_generated/(1-pSup_generated)) %>%
select(transcript_ID,SP.generated,Total.mean) %>% unique
stan_test_noreps_generated <- read_tsv(file.path(wrk.dir,"output/generated_data_test/no_reps/","pSup_estimates.tsv")) %>%
group_by(Condition,transcript_ID) %>%
mutate(SP = pSup_est/(1-pSup_est)) %>%
summarise(SP_est.mean = exp(mean(log(SP)))) %>%
mutate(pSup_est.mean = SP_est.mean/(1+SP_est.mean)) %>%
mutate(Method="noreps") %>%
select(Condition,transcript_ID,pSup_est.mean,Method)
stan_test_withreps_generated <- read_tsv(file.path(wrk.dir,"output/generated_data_test/with_reps/","pSup_est.tsv")) %>%
filter(Term=="mean") %>%
rename("pSup_est.mean"="Value") %>%
select(Condition,transcript_ID,pSup_est.mean) %>%
mutate(Method="withreps")
df_generated_pSup <- generated_counts %>%
group_by(transcript_ID) %>%
mutate(Total.mean = exp(mean(log(Total)))) %>%
mutate(SP.generated=pSup_generated/(1-pSup_generated)) %>%
select(transcript_ID,SP.generated,Total.mean) %>% unique
df_comp_generated_pSup <- bind_rows(stan_test_noreps_generated,stan_test_withreps_generated) %>%
mutate(SP.est=pSup_est.mean/(1-pSup_est.mean)) %>%
left_join(df_generated_pSup,by="transcript_ID")
df_comp_stats <- df_comp_generated_pSup %>%
filter(!is.infinite(SP.generated)) %>%
group_by(Method) %>% nest %>%
mutate(fit = map(data,function(df){
df %>% select(transcript_ID,SP.est,SP.generated) %>%
column_to_rownames(var="transcript_ID") %>%
corrr::correlate(method="pearson") %>%
filter(term=="SP.est")
})) %>%
select(-data) %>%
unnest(fit)
p_random <- ggplot(df_comp_generated_pSup,
aes(SP.est,SP.generated))+
geom_abline(slope=1,linetype="dotted")+
geom_point()+
scale_x_log10()+scale_y_log10()+
facet_grid(.~Method)+
geom_text(data=df_comp_stats,aes(x=10,y=100,label=paste0("r_pears=",round(SP.generated,digits=3))))+
labs(x="Estimated pSup (odds)",y="Actual pSup (odds)")
p_random
df_comp_stats_filter <- df_comp_generated_pSup %>%
filter(Total.mean>1000) %>%
filter(!is.infinite(SP.generated)) %>%
group_by(Method) %>% nest %>%
mutate(fit = map(data,function(df){
df %>% select(transcript_ID,SP.est,SP.generated) %>%
column_to_rownames(var="transcript_ID") %>%
corrr::correlate(method="pearson") %>%
filter(term=="SP.est")
})) %>%
select(-data) %>%
unnest(fit)
p_random_filt <- ggplot(df_comp_generated_pSup %>%filter(Total.mean>1000),
aes(SP.est,SP.generated))+
geom_abline(slope=1,linetype="dotted")+
geom_point()+
scale_x_log10()+scale_y_log10()+
facet_grid(.~Method)+
geom_text(data=df_comp_stats_filter,aes(x=10,y=100,label=paste0("r_pears=",round(SP.generated,digits=3))))+
labs(x="Estimated pSup (odds)",y="Actual pSup (odds)",subtitle="Filtered for Total.counts>1000")
p_random_filt
stan_test_noreps_generated <- read_tsv(file.path(wrk.dir,"output/generated_data_test/no_reps/","pSup_estimates.tsv")) %>%
group_by(Condition,transcript_ID) %>%
mutate(SP = pSup_est/(1-pSup_est)) %>%
summarise(SP_est.mean = exp(mean(log(SP)))) %>%
mutate(pSup_est.mean = SP_est.mean/(1+SP_est.mean)) %>%
mutate(Method="noreps") %>%
select(Condition,transcript_ID,pSup_est.mean,Method)
stan_test_withreps_generated <- read_tsv(file.path(wrk.dir,"output/generated_data_test/with_reps/","pSup_est.tsv")) %>%
filter(Term=="mean") %>%
rename("pSup_est.mean"="Value") %>%
select(Condition,transcript_ID,pSup_est.mean) %>%
mutate(Method="withreps")
df_generated_pSup <- generated_counts %>%
group_by(transcript_ID) %>%
mutate(Total.mean = exp(mean(log(Total)))) %>%
mutate(SP.generated=pSup_generated/(1-pSup_generated)) %>%
select(transcript_ID,SP.generated,Total.mean) %>% unique
df_comp_generated_pSup <- bind_rows(stan_test_noreps_generated,stan_test_withreps_generated) %>%
mutate(SP.est=pSup_est.mean/(1-pSup_est.mean)) %>%
left_join(df_generated_pSup,by="transcript_ID")
df_comp_stats <- df_comp_generated_pSup %>%
filter(!is.infinite(SP.generated)) %>%
group_by(Method) %>% nest %>%
mutate(fit = map(data,function(df){
df %>% select(transcript_ID,SP.est,SP.generated) %>%
column_to_rownames(var="transcript_ID") %>%
corrr::correlate(method="pearson") %>%
filter(term=="SP.est")
})) %>%
select(-data) %>%
unnest(fit)
p_random <- ggplot(df_comp_generated_pSup,
aes(SP.est,SP.generated))+
geom_abline(slope=1,linetype="dotted")+
geom_point()+
scale_x_log10()+scale_y_log10()+
facet_grid(.~Method)+
geom_text(data=df_comp_stats,aes(x=10,y=100,label=paste0("r^2_pears=",round(SP.generated^2,digits=3))))+
labs(x="Estimated pSup (odds)",y="Actual pSup (odds)")
p_random
df_comp_stats_filter <- df_comp_generated_pSup %>%
filter(Total.mean>1000) %>%
filter(!is.infinite(SP.generated)) %>%
group_by(Method) %>% nest %>%
mutate(fit = map(data,function(df){
df %>% select(transcript_ID,SP.est,SP.generated) %>%
column_to_rownames(var="transcript_ID") %>%
corrr::correlate(method="pearson") %>%
filter(term=="SP.est")
})) %>%
select(-data) %>%
unnest(fit)
p_random_filt <- ggplot(df_comp_generated_pSup %>%filter(Total.mean>1000),
aes(SP.est,SP.generated))+
geom_abline(slope=1,linetype="dotted")+
geom_point()+
scale_x_log10()+scale_y_log10()+
facet_grid(.~Method)+
geom_text(data=df_comp_stats_filter,aes(x=10,y=100,label=paste0("r^2_pears=",round(SP.generated^2,digits=3))))+
labs(x="Estimated pSup (odds)",y="Actual pSup (odds)",subtitle="Filtered for Total.counts>1000")
p_random_filt
p_random <- ggplot(df_comp_generated_pSup,
aes(SP.est,SP.generated))+
geom_abline(slope=1,linetype="dotted")+
geom_point()+
scale_x_log10()+scale_y_log10()+
facet_grid(.~Method)+
geom_text(data=df_comp_stats,aes(x=10,y=100,label=expression(paste("r"^2, "_pears=", round(SP.generated^2, digits=3)))))+
labs(x="Estimated pSup (odds)",y="Actual pSup (odds)")
p_random
# compare mixing ratio
mixing_noreps <- read_tsv(file.path(wrk.dir,"output/generated_data_test/no_reps/","stan_summary.tsv")) %>%
filter(Term=="mean") %>%
select(-Term) %>%
pivot_wider(names_from=Variable,values_from=Value) %>%
mutate(mixing_ratio.noreps=mixing_factor_sup/mixing_factor_pellet,
scaling_factor_total.noreps = 1/(mixing_factor_sup+mixing_factor_pellet)) %>%
select(Condition,Rep,mixing_ratio.noreps,scaling_factor_total.noreps)
mixing_withreps <- read_tsv(file.path(wrk.dir,"output/generated_data_test/with_reps/","mixing_parameters.tsv")) %>%
filter(Term=="mean") %>%
select(-Term) %>%
pivot_wider(names_from=Fraction,values_from=Value) %>%
mutate(mixing_ratio.withreps=mixing_factor_pellet/mixing_factor_sup,
scaling_factor_total.withreps=1/scaling_factor_total) %>%
select(Condition,Rep,mixing_ratio.withreps,scaling_factor_total.withreps)
df_comp_mixing <-  full_join(mixing_noreps,mixing_withreps,by=c("Condition","Rep")) %>%
arrange(mixing_ratio.noreps) %>%
select(c(Condition,Rep,starts_with("mixing"),starts_with("scaling"))) %>%
left_join(generated_counts %>%
select(Condition,Rep,mixing_ratio) %>% unique %>%
rename("mixing_ratio.real"="mixing_ratio"),
by=c("Condition","Rep"))
ft_random <- flextable(df_comp_mixing%>% select(-Condition) %>%
select(Rep,mixing_ratio.real,mixing_ratio.noreps,mixing_ratio.withreps) %>%
pivot_longer(cols=c(starts_with("mixing"),starts_with("scaling")),names_to="params",values_to="Value") %>%
mutate(Value=round(Value,digits=2)) %>%
pivot_wider(names_from="params",values_from="Value")) %>% autofit
ft_random
p_random_filt <- ggplot(df_comp_generated_pSup %>%filter(Total.mean>1000),
aes(SP.est,SP.generated))+
geom_abline(slope=1,linetype="dotted")+
geom_point()+
scale_x_log10()+scale_y_log10()+
facet_grid(.~Method)+
geom_text(data=df_comp_stats_filter,aes(x=10,y=100,label=as.character(bquote("r"^2~"_pears="~.(round(SP.generated^2,digits=3))))))+
labs(x="Estimated pSup (odds)",y="Actual pSup (odds)",subtitle="Filtered for Total.counts>1000")
p_random_filt
df_comp_stats_filter <- df_comp_generated_pSup %>%
filter(Total.mean>1000) %>%
filter(!is.infinite(SP.generated)) %>%
group_by(Method) %>% nest %>%
mutate(fit = map(data,function(df){
df %>% select(transcript_ID,SP.est,SP.generated) %>%
column_to_rownames(var="transcript_ID") %>%
corrr::correlate(method="pearson") %>%
filter(term=="SP.est")
})) %>%
select(-data) %>%
unnest(fit) %>%
mutate(label=as.character(bquote("r"^2~"_pears="~.(round(SP.generated^2,digits=3)))))
View(df_comp_stats_filter)
df_comp_stats_filter <- df_comp_generated_pSup %>%
filter(Total.mean>1000) %>%
filter(!is.infinite(SP.generated)) %>%
group_by(Method) %>% nest %>%
mutate(fit = map(data,function(df){
df %>% select(transcript_ID,SP.est,SP.generated) %>%
column_to_rownames(var="transcript_ID") %>%
corrr::correlate(method="pearson") %>%
filter(term=="SP.est")
})) %>%
select(-data) %>%
unnest(fit) %>%
mutate(label = as.character(bquote("r"^2~"_pears="~.(round(SP.generated^2, digits=3)))))
df_comp_stats_filter <- df_comp_generated_pSup %>%
filter(Total.mean>1000) %>%
filter(!is.infinite(SP.generated)) %>%
group_by(Method) %>% nest %>%
mutate(fit = map(data,function(df){
df %>% select(transcript_ID,SP.est,SP.generated) %>%
column_to_rownames(var="transcript_ID") %>%
corrr::correlate(method="pearson") %>%
filter(term=="SP.est")
})) %>%
select(-data) %>%
unnest(fit) %>%
mutate(lab = round(SP.generated^2,digits=3))
View(df_comp_stats_filter)
df_comp_stats_filter <- df_comp_generated_pSup %>%
filter(Total.mean>1000) %>%
filter(!is.infinite(SP.generated)) %>%
group_by(Method) %>% nest %>%
mutate(fit = map(data,function(df){
df %>% select(transcript_ID,SP.est,SP.generated) %>%
column_to_rownames(var="transcript_ID") %>%
corrr::correlate(method="pearson") %>%
filter(term=="SP.est")
})) %>%
select(-data) %>%
unnest(fit) %>%
mutate(rounded_r2 = round(SP.generated^2,digits=3)) %>%
mutate(label = as.character(bquote("r"^2~"_pears="~.rounded_r2)))
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(conflicted)
library(rstan)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
#options(mc.cores = 4)
library(gridExtra)
library(MASS)
library(flextable)
library(cowplot)
library(SedSeqQuant)
conflicts_prefer(dplyr::filter)
conflicts_prefer(cowplot::stamp)
conflicts_prefer(dplyr::combine)
conflicts_prefer(dplyr::select)
conflicts_prefer(purrr::compose)
wrk.dir <- getwd()
df_comp_stats_filter <- df_comp_generated_pSup %>%
filter(Total.mean>1000) %>%
filter(!is.infinite(SP.generated)) %>%
group_by(Method) %>% nest %>%
mutate(fit = map(data,function(df){
df %>% select(transcript_ID,SP.est,SP.generated) %>%
column_to_rownames(var="transcript_ID") %>%
corrr::correlate(method="pearson") %>%
filter(term=="SP.est")
})) %>%
select(-data) %>%
unnest(fit) %>%
mutate(rounded_r2 = round(SP.generated^2,digits=3)) %>%
mutate(label = sprintf("r^2_pears=%s", rounded_r2))
View(df_comp_stats_filter)
df_comp_stats_filter <- df_comp_generated_pSup %>%
filter(Total.mean>1000) %>%
filter(!is.infinite(SP.generated)) %>%
group_by(Method) %>% nest %>%
mutate(fit = map(data,function(df){
df %>% select(transcript_ID,SP.est,SP.generated) %>%
column_to_rownames(var="transcript_ID") %>%
corrr::correlate(method="pearson") %>%
filter(term=="SP.est")
})) %>%
select(-data) %>%
unnest(fit) %>%
mutate(rounded_r2 = round(SP.generated^2,digits=3)) %>%
rowwise() %>%
mutate(label = as.character(bquote("r"^2~"_pears="~.rounded_r2)))
df_comp_stats_filter <- df_comp_generated_pSup %>%
filter(Total.mean>1000) %>%
filter(!is.infinite(SP.generated)) %>%
group_by(Method) %>% nest %>%
mutate(fit = map(data,function(df){
df %>% select(transcript_ID,SP.est,SP.generated) %>%
column_to_rownames(var="transcript_ID") %>%
corrr::correlate(method="pearson") %>%
filter(term=="SP.est")
})) %>%
select(-data) %>%
unnest(fit) %>%
mutate(rounded_r2 = round(SP.generated^2,digits=3)) %>%
rowwise() %>%
mutate(label = as.character(bquote("r"^2~"_pears="~.(rounded_r2)))) %>%
ungroup()
df_comp_stats_filter <- df_comp_generated_pSup %>%
filter(Total.mean>1000) %>%
filter(!is.infinite(SP.generated)) %>%
group_by(Method) %>% nest %>%
mutate(fit = map(data,function(df){
df %>% select(transcript_ID,SP.est,SP.generated) %>%
column_to_rownames(var="transcript_ID") %>%
corrr::correlate(method="pearson") %>%
filter(term=="SP.est")
})) %>%
select(-data) %>%
unnest(fit) %>%
mutate(rounded_r2 = round(SP.generated^2,digits=3)) %>%
mutate(label = purrr::map_chr(rounded_r2, ~ as.character(bquote("r"^2~"_pears="~.(.x))))) %>%
ungroup()
bquote("r"^2~"_pears="~.(0.98))
cat(bquote("r"^2~"_pears="~.(0.98)))
print(bquote("r"^2~"_pears="~.(0.98)))
stan_test_noreps_generated <- read_tsv(file.path(wrk.dir,"output/generated_data_test/no_reps/","pSup_estimates.tsv"),
show_col_types = F) %>%
group_by(Condition,transcript_ID) %>%
mutate(SP = pSup_est/(1-pSup_est)) %>%
summarise(SP_est.mean = exp(mean(log(SP)))) %>%
mutate(pSup_est.mean = SP_est.mean/(1+SP_est.mean)) %>%
mutate(Method="noreps") %>%
select(Condition,transcript_ID,pSup_est.mean,Method)
stan_test_withreps_generated <- read_tsv(file.path(wrk.dir,"output/generated_data_test/with_reps/","pSup_est.tsv"),
show_col_types = F) %>%
filter(Term=="mean") %>%
rename("pSup_est.mean"="Value") %>%
select(Condition,transcript_ID,pSup_est.mean) %>%
mutate(Method="withreps")
df_generated_pSup <- generated_counts %>%
group_by(transcript_ID) %>%
mutate(Total.mean = exp(mean(log(Total)))) %>%
mutate(SP.generated=pSup_generated/(1-pSup_generated)) %>%
select(transcript_ID,SP.generated,Total.mean) %>% unique
df_comp_generated_pSup <- bind_rows(stan_test_noreps_generated,stan_test_withreps_generated) %>%
mutate(SP.est=pSup_est.mean/(1-pSup_est.mean)) %>%
left_join(df_generated_pSup,by="transcript_ID")
df_comp_stats <- df_comp_generated_pSup %>%
filter(!is.infinite(SP.generated)) %>%
group_by(Method) %>% nest %>%
mutate(fit = map(data,function(df){
df %>% select(transcript_ID,SP.est,SP.generated) %>%
column_to_rownames(var="transcript_ID") %>%
corrr::correlate(method="pearson") %>%
filter(term=="SP.est")
})) %>%
select(-data) %>%
unnest(fit)
p_random <- ggplot(df_comp_generated_pSup,
aes(SP.est,SP.generated))+
geom_abline(slope=1,linetype="dotted")+
geom_point()+
scale_x_log10()+scale_y_log10()+
facet_grid(.~Method)+
geom_text(data=df_comp_stats,aes(x=10,y=100,label=paste0("r^2_pears=",round(SP.generated^2,digits=3))))+
labs(x="Estimated pSup (odds)",y="Actual pSup (odds)")
p_random
df_comp_stats_filter <- df_comp_generated_pSup %>%
filter(Total.mean>1000) %>%
filter(!is.infinite(SP.generated)) %>%
group_by(Method) %>% nest %>%
mutate(fit = map(data,function(df){
df %>% select(transcript_ID,SP.est,SP.generated) %>%
column_to_rownames(var="transcript_ID") %>%
corrr::correlate(method="pearson") %>%
filter(term=="SP.est")
})) %>%
select(-data) %>%
unnest(fit)
p_random_filt <- ggplot(df_comp_generated_pSup %>%filter(Total.mean>1000),
aes(SP.est,SP.generated))+
geom_abline(slope=1,linetype="dotted")+
geom_point()+
scale_x_log10()+scale_y_log10()+
facet_grid(.~Method)+
geom_text(data=df_comp_stats_filter,aes(x=10,y=100,label=paste0("r^2_pears=",round(SP.generated^2,digits=3))))+
labs(x="Estimated pSup (odds)",y="Actual pSup (odds)",subtitle="Filtered for Total.counts>1000")
p_random_filt
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(message = FALSE)
library(tidyverse)
library(conflicted)
library(rstan)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
#options(mc.cores = 4)
library(gridExtra)
library(MASS)
library(flextable)
library(cowplot)
library(SedSeqQuant)
conflicts_prefer(dplyr::filter)
conflicts_prefer(cowplot::stamp)
conflicts_prefer(dplyr::combine)
conflicts_prefer(dplyr::select)
conflicts_prefer(purrr::compose)
wrk.dir <- getwd()
print(readLines(file.path(wrk.dir,"SedSeqQuantNoReps.stan")))
cat(readLines(file.path(wrk.dir,"SedSeqQuantNoReps.stan")))
cat(readLines(file.path(wrk.dir,"SedSeqQuantReps.stan")))
cat(readLines(file.path(wrk.dir,"SedSeqQuantNoReps.stan")),sep="\n")
colnames(df_comp_generated_pSup)
p_violin <- ggplot(df_comp_ratio,
aes(Method,Ratio))+
geom_hline(yintercept=1,linetype="dotted")+
geom_point(alpha=0.05,position=position_jitter())+
geom_violin(draw_quantiles = c(0.25,0.5,0.75))+
scale_y_log10()
stan_test_noreps_generated <- read_tsv(file.path(wrk.dir,"output/generated_data_test/no_reps/","pSup_estimates.tsv"),
show_col_types = F) %>%
group_by(Condition,transcript_ID) %>%
mutate(SP = pSup_est/(1-pSup_est)) %>%
summarise(SP_est.mean = exp(mean(log(SP)))) %>%
mutate(pSup_est.mean = SP_est.mean/(1+SP_est.mean)) %>%
mutate(Method="noreps") %>%
select(Condition,transcript_ID,pSup_est.mean,Method)
stan_test_withreps_generated <- read_tsv(file.path(wrk.dir,"output/generated_data_test/with_reps/","pSup_est.tsv"),
show_col_types = F) %>%
filter(Term=="mean") %>%
rename("pSup_est.mean"="Value") %>%
select(Condition,transcript_ID,pSup_est.mean) %>%
mutate(Method="withreps")
df_generated_pSup <- generated_counts %>%
group_by(transcript_ID) %>%
mutate(Total.mean = exp(mean(log(Total)))) %>%
mutate(SP.generated=pSup_generated/(1-pSup_generated)) %>%
select(transcript_ID,SP.generated,Total.mean) %>% unique
df_comp_generated_pSup <- bind_rows(stan_test_noreps_generated,stan_test_withreps_generated) %>%
mutate(SP.est=pSup_est.mean/(1-pSup_est.mean)) %>%
left_join(df_generated_pSup,by="transcript_ID")
df_comp_stats <- df_comp_generated_pSup %>%
filter(!is.infinite(SP.generated)) %>%
group_by(Method) %>% nest %>%
mutate(fit = map(data,function(df){
df %>% select(transcript_ID,SP.est,SP.generated) %>%
column_to_rownames(var="transcript_ID") %>%
corrr::correlate(method="pearson") %>%
filter(term=="SP.est")
})) %>%
select(-data) %>%
unnest(fit)
p_random <- ggplot(df_comp_generated_pSup,
aes(SP.est,SP.generated))+
geom_abline(slope=1,linetype="dotted")+
geom_point()+
scale_x_log10()+scale_y_log10()+
facet_grid(.~Method)+
geom_text(data=df_comp_stats,aes(x=10,y=100,label=paste0("r^2_pears=",round(SP.generated^2,digits=3))))+
labs(x="Estimated pSup (odds)",y="Actual pSup (odds)")
p_random
df_comp_stats_filter <- df_comp_generated_pSup %>%
filter(Total.mean>1000) %>%
filter(!is.infinite(SP.generated)) %>%
group_by(Method) %>% nest %>%
mutate(fit = map(data,function(df){
df %>% select(transcript_ID,SP.est,SP.generated) %>%
column_to_rownames(var="transcript_ID") %>%
corrr::correlate(method="pearson") %>%
filter(term=="SP.est")
})) %>%
select(-data) %>%
unnest(fit)
p_random_filt <- ggplot(df_comp_generated_pSup %>%filter(Total.mean>1000),
aes(SP.est,SP.generated))+
geom_abline(slope=1,linetype="dotted")+
geom_point()+
scale_x_log10()+scale_y_log10()+
facet_grid(.~Method)+
geom_text(data=df_comp_stats_filter,aes(x=10,y=100,label=paste0("r^2_pears=",round(SP.generated^2,digits=3))))+
labs(x="Estimated pSup (odds)",y="Actual pSup (odds)",subtitle="Filtered for Total.counts>1000")
p_random_filt
df_comp_ratio <- df_comp_generated_pSup %>%
mutate(Ratio=SP.est/SP.generated)
p_violin <- ggplot(df_comp_ratio,
aes(Method,Ratio))+
geom_hline(yintercept=1,linetype="dotted")+
geom_point(alpha=0.05,position=position_jitter())+
geom_violin(draw_quantiles = c(0.25,0.5,0.75))+
scale_y_log10()
p_violin
p_violin <- ggplot(df_comp_ratio,
aes(Method,Ratio))+
geom_hline(yintercept=1,linetype="dotted")+
geom_point(alpha=0.05,position=position_jitter())+
geom_violin(draw_quantiles = c(0.25,0.5,0.75),alpha=0.5)+
geom_violin(draw_quantiles = c(0.25,0.5,0.75),fill=NA)+
scale_y_log10()+
theme_half_open(font_size=12)
p_violin
